[{"C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\weather-app\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\weather-app\\src\\reportWebVitals.js":"2","C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\weather-app\\src\\App.js":"3","C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\weather-app\\src\\components\\searchBar.js":"4","C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\weather-app\\src\\components\\SearchBar.js":"5","C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\weather-app\\src\\components\\GetWeather.js":"6","C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\weather-app\\src\\components\\SelectUnit.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":4592,"mtime":1615207215373,"results":"11","hashOfConfig":"9"},{"size":1050,"mtime":1611171669791,"results":"12","hashOfConfig":"9"},{"size":1162,"mtime":1611344591432,"results":"13","hashOfConfig":"9"},{"size":1581,"mtime":1615204423888,"results":"14","hashOfConfig":"9"},{"size":1823,"mtime":1611304127623,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"10x8h19",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\weather-app\\src\\index.js",[],["35","36"],"C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\weather-app\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\weather-app\\src\\App.js",["37"],"import React, { Component } from 'react';\nimport ReactDom from 'react-dom';\nimport SearchBar from './components/SearchBar';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport GetWeather from './components/GetWeather'\nimport './App.css';\nimport axios from 'axios';\nimport SelectUnit from './components/SelectUnit';\nconst API_KEY = \"bf5334823fad33d71a7d765371104dcf\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n      city: { name: \"City\", country: \"Country\" } ,\n      temperature: { value: undefined, min: undefined , max: undefined } ,\n      humidity: { value: undefined } ,\n      wind: { speed: 0 , direction: { name: \"North\", degree: 250 } } ,\n      tempCalc: { value: undefined, min: undefined, max: undefined, unit: \"\\u2103\"},\n      icon: \"01d\",\n      weatherId: undefined,\n      searchQuery: \"\",\n      bgImage: undefined\n      \n    };\n  }\n  // Searching with city name without API call\n  onChangeCity = (e) => {\n    this.setState({ searchQuery: e.target.value });\n  }\n  //API CALL\n  getWeatherF = async () => {\n    const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.searchQuery}&appid=${API_KEY}`);\n    this.setState({ \n      city : ({...this.state.city, name: response.data.name, country: response.data.sys.country}),\n      temperature : ({...this.state.temperature, value : response.data.main.temp, min: response.data.main.temp_min, max: response.data.main.temp_max}),\n      humidity : ({...this.state.humidity, value : response.data.main.humidity}), \n      wind: ({...this.state.wind, speed: response.data.wind.speed, direction : {...this.state.wind.direction, degree: response.data.wind.degree}}),\n      icon :  response.data.weather[0].icon,\n      tempCalc : ({...this.state.tempCalc, value: response.data.main.temp -273, min: response.data.main.temp_min -273, max: response.data.main.temp_max -273}),\n      weatherId: response.data.weather[0].id,\n    });\n    // define background image but not using.\n    return (this.state.weatherId > 199 && this.state.weatherId < 532 ? this.setState({ bgImage: require(\"./images/storm.jpeg\") }) : \n      this.state.weatherId > 599 && this.state.weatherId < 623 ? this.setState({ bgImage: require(\"./images/snowy.jpeg\")}) : \n      this.state.weatherId > 799 && this.state.weatherId < 803 ? this.setState({ bgImage: require(\"./images/sunny.jpeg\")}) :\n      this.state.weatherId > 802 ? this.setState({ bgImage: require(\"./images/cloudy.jpeg\")}) : \n      this.state.weatherId > 299 && this.state.weatherId < 532 ? this.setState({ bgImage: require(\"./images/raining.jpeg\")})  \n      : this.setState({bgImage : require(\"./images/sunny.jpeg\")}));\n      \n  }\n \n  UnitCalculator = (e) => {\n    if(String(e.target.value)  === \"celcius\") {\n      this.setState({ tempCalc : {\n        ...this.state.tempCalc,\n        unit: \"\\u2103\",\n        value: parseInt(this.state.temperature.value - 273),\n        min: parseInt(this.state.temperature.min - 273),\n        max: parseInt(this.state.temperature.max - 273) \n      }\n      });\n    }\n    else if (String(e.target.value) === \"kelvin\"){\n      this.setState({ tempCalc : {\n        ...this.state.tempCalc,\n        unit: \"\\u212A\",\n        value: parseInt(this.state.temperature.value),\n        min: parseInt(this.state.temperature.min),\n        max: parseInt(this.state.temperature.max) \n      }\n      });\n      console.log(this.state.bgImage);\n    }\n    else if(String(e.target.value) === \"fahrenheit\") {\n      this.setState({ tempCalc : {\n        ...this.state.tempCalc,\n        unit: \"\\u2109\",\n        value: parseInt(this.state.temperature.value * (9 / 5) - 460),\n        min: parseInt(this.state.temperature.min * (9 / 5) - 460),\n        max: parseInt(this.state.temperature.max * (9 / 5) - 460) \n      }\n      });\n    }\n    else{\n      this.setState({ tempCalc: {\n        ...this.state.tempCalc,\n        value: parseInt(this.state.temperature.value - 273),\n        min: parseInt(this.state.temperature.min - 273),\n        max: parseInt(this.state.temperature.max - 273) \n      }\n      });\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\" style={{ backgroundImage: `url(${this.state.bgImage})` }}>\n        <h1>Weather App</h1>\n        <SearchBar getWeatherProp = {this.getWeatherF } typeCityProp = {this.onChangeCity} />\n        <SelectUnit selectUnitProp = {this.UnitCalculator}/>\n        <GetWeather city = {this.state.city} temperature={this.state.tempCalc} wind = {this.state.wind} humidity = {this.state.humidity} iconProp = {this.state.icon} />\n      </div>\n    );\n  }\n}\nexport default App;\n","C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\weather-app\\src\\components\\searchBar.js",["38","39","40","41","42"],"C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\weather-app\\src\\components\\SearchBar.js",["43"],"import React, { Component } from 'react'\r\nimport ReactDom from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './radioStyle.css';\r\n\r\nclass SearchBar extends Component {\r\n    handleSubmit = (e,props) => {\r\n        e.preventDefault();\r\n        this.props.getWeatherProp();\r\n    }\r\n    render(props) {\r\n        return (\r\n            <div>\r\n                <form className=\"container-sm\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"row m-md-5 m-1\">\r\n                        <div className=\"col-6 col-sm-9 row\">\r\n                            <input type=\"text\" className=\"form-control align-items-center col-11 mr-1\" name=\"Searcher\" onChange= {this.props.typeCityProp} placeholder=\"Search\"/>\r\n                        </div>\r\n                        <div className=\"col-6 col-sm-3\">\r\n\r\n                            <button type=\"submit\" className=\"btn btn-danger float-right float-sm-left\">\r\n                                Get Weather\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SearchBar;\r\n",["44","45"],"C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\weather-app\\src\\components\\GetWeather.js",["46","47","48","49"],"import React, { Component } from 'react'\r\nimport ReactDom from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'weather-icons/css/weather-icons.css';\r\nimport './radioStyle.css';\r\n\r\nclass GetWeather extends Component {\r\n    render(props) {\r\n        var iconImg = \"http://openweathermap.org/img/w/\" + `${this.props.iconProp}` + \".png\";\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div>\r\n                        <h2>{this.props.city.name},{this.props.city.country}</h2>\r\n                        <h2 className=\"mb-5\">{parseInt(this.props.temperature.value)} {this.props.temperature.unit}</h2>\r\n                        <img className =\"img-icon\" src = {iconImg}/>\r\n                        <div className=\"m-3\"><h3><i className=\"wi wi-strong-wind\"></i> {parseInt(this.props.wind.speed * 3.6)} km/h</h3></div>\r\n                        <div className=\"m-3\"><h3><i className=\"wi wi-raindrop display-5\"></i> %{this.props.humidity.value}</h3></div>\r\n                        <div className=\"my-3\">\r\n                            <h3 className=\"text-center\">\r\n                                <span className=\"mx-5\">{parseInt(this.props.temperature.min)} {this.props.temperature.unit}</span>\r\n                                <span className=\"mx-5\">{parseInt(this.props.temperature.max)} {this.props.temperature.unit}</span>\r\n                            </h3>\r\n                        </div>\r\n                    </div>        \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default GetWeather;\r\n","C:\\Users\\ASUS\\Desktop\\koding\\coursera\\reacties\\weather-app\\src\\components\\SelectUnit.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":16},{"ruleId":"54","severity":1,"message":"55","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":16},{"ruleId":"54","severity":1,"message":"58","line":3,"column":27,"nodeType":"56","messageId":"57","endLine":3,"endColumn":33},{"ruleId":"54","severity":1,"message":"59","line":3,"column":35,"nodeType":"56","messageId":"57","endLine":3,"endColumn":41},{"ruleId":"54","severity":1,"message":"60","line":3,"column":43,"nodeType":"56","messageId":"57","endLine":3,"endColumn":48},{"ruleId":"54","severity":1,"message":"61","line":3,"column":50,"nodeType":"56","messageId":"57","endLine":3,"endColumn":54},{"ruleId":"54","severity":1,"message":"55","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":16},{"ruleId":"50","replacedBy":"62"},{"ruleId":"52","replacedBy":"63"},{"ruleId":"54","severity":1,"message":"55","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":9,"column":58,"nodeType":"66","messageId":"67","endLine":9,"endColumn":59},{"ruleId":"64","severity":1,"message":"65","line":9,"column":85,"nodeType":"66","messageId":"67","endLine":9,"endColumn":86},{"ruleId":"68","severity":1,"message":"69","line":16,"column":25,"nodeType":"70","endLine":16,"endColumn":69},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'ReactDom' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.",["71"],["72"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]